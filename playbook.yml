- name: Basic server setup
  hosts: servers
  become: yes
  tasks:
    - name: Update apt
      apt:
        update_cache: true

    - name: Upgrade all packages
      apt:
        upgrade: dist
        
    - name: Set timezone to Europe/Kyiv
      timezone:
        name: Europe/Kyiv

    - name: Install chrony for time synchronization
      apt:
        name: chrony
        state: present

    - name: Enable and start chrony service
      service:
        name: chrony
        state: started
        enabled: yes

    - name: Add user
      user:
        name: "{{ ansible_user }}"
        state: present
        groups: sudo
        append: true
        
    - name: Install packages
      apt:
        name:
          - vim
          - curl
          - htop
          - fail2ban
          - ufw
          - git
          - unattended-upgrades
          - mtr
        state: present

    - name: Enable unattended-upgrades
      debconf:
        name: unattended-upgrades
        question: unattended-upgrades/enable_auto_updates
        value: "true"
        vtype: boolean

    - name: Configure unattended-upgrades
      blockinfile:
        path: /etc/apt/apt.conf.d/50unattended-upgrades
        create: yes
        block: |
          Unattended-Upgrade::Allowed-Origins {
              "${distro_id}:${distro_codename}";
              "${distro_id}:${distro_codename}-security";
              "${distro_id}ESMApps:${distro_codename}-apps-security";
              "${distro_id}ESM:${distro_codename}-infra-security";
          };
          Unattended-Upgrade::AutoFixInterruptedDpkg "true";
          Unattended-Upgrade::MinimalSteps "true";
          Unattended-Upgrade::InstallOnShutdown "false";
          Unattended-Upgrade::Remove-Unused-Dependencies "true";
          Unattended-Upgrade::Automatic-Reboot "false";

    - name: Configure automatic updates
      copy:
        dest: /etc/apt/apt.conf.d/20auto-upgrades
        content: |
          APT::Periodic::Update-Package-Lists "1";
          APT::Periodic::Download-Upgradeable-Packages "1";
          APT::Periodic::Unattended-Upgrade "1";
          APT::Periodic::AutocleanInterval "7";

    - name: Start and enable unattended-upgrades service
      service:
        name: unattended-upgrades
        state: started
        enabled: yes

    - name: Create .ssh directory
      file:
        path: "{{ ansible_env.HOME }}/.ssh"
        state: directory
        mode: '0700'

    - name: Add SSH key to authorized_keys
      authorized_key:
        user: "{{ ansible_user }}"
        key: "{{ lookup('file', ssh_pub_key_path) }}"
        state: present

    - name: Configure secure SSH configuration
      lineinfile:
        path: /etc/ssh/sshd_config
        regexp: "{{ item.regexp }}"
        line: "{{ item.line }}"
        state: present
      loop:
        - { regexp: '^#?PermitRootLogin', line: 'PermitRootLogin no' }
        - { regexp: '^#?PasswordAuthentication', line: 'PasswordAuthentication no' }
      notify: restart ssh
      
    - name: Allow OpenSSH through UFW
      ufw:
        rule: allow
        name: OpenSSH
        state: enabled

    - name: Enable UFW
      ufw:
        state: enabled
        policy: deny
  handlers:
    - name: restart ssh
      service:
        name: ssh
        state: restarted
  vars:
    ssh_pub_key_path: "{{ lookup('env', 'SSH_KEY_PATH') | default('/mnt/c/Users/<user_name>/.ssh/id_rsa.pub', true) }}" # NOTE: This is a workaround to get the SSH key path from the environment variable, replace <user_name> with your username
